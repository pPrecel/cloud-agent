// Code generated by mockery v2.33.3. DO NOT EDIT.

package automock

import (
	cache "github.com/pPrecel/cloudagent/pkg/cache"
	mock "github.com/stretchr/testify/mock"
)

// RegisteredResource is an autogenerated mock type for the RegisteredResource type
type RegisteredResource[T interface{}] struct {
	mock.Mock
}

// Get provides a mock function with given fields:
func (_m *RegisteredResource[T]) Get() cache.Value[T] {
	ret := _m.Called()

	var r0 cache.Value[T]
	if rf, ok := ret.Get(0).(func() cache.Value[T]); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(cache.Value[T])
	}

	return r0
}

// Set provides a mock function with given fields: _a0, _a1
func (_m *RegisteredResource[T]) Set(_a0 T, _a1 error) {
	_m.Called(_a0, _a1)
}

// NewRegisteredResource creates a new instance of RegisteredResource. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRegisteredResource[T interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *RegisteredResource[T] {
	mock := &RegisteredResource[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.12.0. DO NOT EDIT.

package automock

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"

	v1beta1 "github.com/gardener/gardener/pkg/apis/core/v1beta1"
)

// StateGetter is an autogenerated mock type for the StateGetter type
type StateGetter struct {
	mock.Mock
}

// Get provides a mock function with given fields:
func (_m *StateGetter) Get() *v1beta1.ShootList {
	ret := _m.Called()

	var r0 *v1beta1.ShootList
	if rf, ok := ret.Get(0).(func() *v1beta1.ShootList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1beta1.ShootList)
		}
	}

	return r0
}

// NewStateGetter creates a new instance of StateGetter. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewStateGetter(t testing.TB) *StateGetter {
	mock := &StateGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
